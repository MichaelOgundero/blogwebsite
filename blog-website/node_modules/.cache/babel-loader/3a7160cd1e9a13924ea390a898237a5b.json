{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ogund\\\\Desktop\\\\workspace\\\\Javascript\\\\Blog\\\\blog-website\\\\src\\\\components\\\\Grid\\\\GridContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Flex } from \"rebass\";\nimport { useMediaQuery } from \"react-responsive\";\nimport GridContent from \"./GridContent\";\n\nconst GridContainer = ({\n  gridEl\n}) => {\n  _s();\n\n  const [paddingHeader, setPaddingHeader] = useState(6);\n\n  const handlePaddingHeader = matches => {\n    if (matches) {\n      setPaddingHeader(6);\n    } else {\n      setPaddingHeader(4);\n    }\n  };\n\n  const isMobile = useMediaQuery({\n    maxDeviceWidth: 768\n  });\n  const isLaptop = useMediaQuery({\n    minDeviceWidth: 769\n  }, undefined, handlePaddingHeader);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      px: paddingHeader,\n      py: 4,\n      alignItems: \"flex-start\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [isLaptop && /*#__PURE__*/_jsxDEV(GridContent, {\n          display: \"LAPTOP\",\n          gridEl: gridEl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(GridContent, {\n          display: \"MOBILE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(GridContainer, \"ms+AGV9Lwv3Ez5l/8l55PZ/zR3M=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n\n_c = GridContainer;\nexport default GridContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"GridContainer\");","map":{"version":3,"sources":["C:/Users/ogund/Desktop/workspace/Javascript/Blog/blog-website/src/components/Grid/GridContainer.js"],"names":["React","useState","Flex","useMediaQuery","GridContent","GridContainer","gridEl","paddingHeader","setPaddingHeader","handlePaddingHeader","matches","isMobile","maxDeviceWidth","isLaptop","minDeviceWidth","undefined","width"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,QAAsB,QAAtB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAAA;;AAChC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCP,QAAQ,CAAC,CAAD,CAAlD;;AAGA,QAAMQ,mBAAmB,GAAIC,OAAD,IAAa;AACrC,QAAIA,OAAJ,EAAa;AACTF,MAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACH,KAFD,MAEO;AACHA,MAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACH;AACJ,GAND;;AAQA,QAAMG,QAAQ,GAAGR,aAAa,CAAC;AAAES,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAA9B;AACA,QAAMC,QAAQ,GAAGV,aAAa,CAC1B;AAAEW,IAAAA,cAAc,EAAE;AAAlB,GAD0B,EAE1BC,SAF0B,EAG1BN,mBAH0B,CAA9B;AAMA,sBACI;AAAA,2BACI,QAAC,IAAD;AACI,MAAA,EAAE,EAAEF,aADR;AAEI,MAAA,EAAE,EAAE,CAFR;AAGI,MAAA,UAAU,EAAC,YAHf;AAAA,6BAKI;AACI,QAAA,KAAK,EAAE;AACHS,UAAAA,KAAK,EAAE;AADJ,SADX;AAAA,mBAKKH,QAAQ,iBAEL,QAAC,WAAD;AAAa,UAAA,OAAO,EAAE,QAAtB;AAAiC,UAAA,MAAM,EAAEP;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAPR,EAUKK,QAAQ,iBACL,QAAC,WAAD;AAAa,UAAA,OAAO,EAAE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBAXR;AAAA;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA3CD;;GAAMN,a;UAYeF,a,EACAA,a;;;KAbfE,a;AA+CN,eAAeA,aAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Flex, } from \"rebass\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport GridContent from \"./GridContent\";\r\n\r\n\r\nconst GridContainer = ({gridEl}) => {\r\n    const [paddingHeader, setPaddingHeader] = useState(6);\r\n\r\n\r\n    const handlePaddingHeader = (matches) => {\r\n        if (matches) {\r\n            setPaddingHeader(6);\r\n        } else {\r\n            setPaddingHeader(4);\r\n        }\r\n    };\r\n\r\n    const isMobile = useMediaQuery({ maxDeviceWidth: 768 });\r\n    const isLaptop = useMediaQuery(\r\n        { minDeviceWidth: 769 },\r\n        undefined,\r\n        handlePaddingHeader\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <Flex\r\n                px={paddingHeader}\r\n                py={4}\r\n                alignItems=\"flex-start\"\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                    }}\r\n                >\r\n                    {isLaptop && (\r\n\r\n                        <GridContent display={\"LAPTOP\"}  gridEl={gridEl}/>\r\n                    )}\r\n\r\n                    {isMobile && (\r\n                        <GridContent display={\"MOBILE\"} />\r\n                    )}\r\n                </div>\r\n            </Flex>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default GridContainer;\r\n"]},"metadata":{},"sourceType":"module"}