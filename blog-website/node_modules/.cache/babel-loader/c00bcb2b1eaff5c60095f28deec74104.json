{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ogund\\\\Desktop\\\\workspace\\\\javascript\\\\blog\\\\blog-website\\\\src\\\\components\\\\Grid\\\\GridContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Heading, Box, Link } from \"rebass\";\nimport { Input } from \"@rebass/forms\";\nimport { loggedOutLinks, loggedInLinks } from \"./links\";\nimport { useMediaQuery } from \"react-responsive\";\nimport MenuContainer from \"../../components/Menu/MenuContainer\";\nimport DropMenuContainer from \"../../components/DropMenu/DropMenuContainer\";\nimport searchIcon from \"../../assets/icons/search-white-18dp.svg\";\nimport userIcon from \"../../assets/icons/person-white-24dp.svg\";\nimport theme from \"../../components/Layout/theme\";\n\nconst Header = ({\n  isUser\n}) => {\n  _s();\n\n  const menuLinks = isUser ? loggedInLinks : loggedOutLinks;\n  const [isOpen, setIsOpen] = useState(false);\n  const [paddingHeader, setPaddingHeader] = useState(6);\n  const [navBarColor, setNavBarColor] = useState(\"transparent\");\n  const [dropShadow, setDropShadow] = useState(\"none\");\n  const [dropMenuStatus, setDropMenuStatus] = useState(false);\n\n  const handlePaddingHeader = matches => {\n    if (matches) {\n      setPaddingHeader(6);\n    } else {\n      setPaddingHeader(4);\n    }\n  };\n\n  const isMobile = useMediaQuery({\n    maxDeviceWidth: 768\n  });\n  const isLaptop = useMediaQuery({\n    minDeviceWidth: 769\n  }, undefined, handlePaddingHeader);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      px: paddingHeader,\n      py: 4,\n      color: \"white\",\n      alignItems: \"flex-start\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: \"100%\"\n        },\n        children: [isLaptop && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid red'\n          },\n          children: \"laptop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), isMobile && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            border: '1px solid red'\n          },\n          children: \"mobile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MenuContainer, {\n      isOpen: isOpen,\n      menuLinks: menuLinks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Header, \"AOPnCG1/Ir4d3jbwXIFr/8wFfmM=\", false, function () {\n  return [useMediaQuery, useMediaQuery];\n});\n\n_c = Header;\nHeader.propTypes = {\n  isUser: PropTypes.bool.isRequired\n};\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/ogund/Desktop/workspace/javascript/blog/blog-website/src/components/Grid/GridContainer.js"],"names":["React","useState","useEffect","PropTypes","Flex","Heading","Box","Link","Input","loggedOutLinks","loggedInLinks","useMediaQuery","MenuContainer","DropMenuContainer","theme","Header","isUser","menuLinks","isOpen","setIsOpen","paddingHeader","setPaddingHeader","navBarColor","setNavBarColor","dropShadow","setDropShadow","dropMenuStatus","setDropMenuStatus","handlePaddingHeader","matches","isMobile","maxDeviceWidth","isLaptop","minDeviceWidth","undefined","width","border","propTypes","bool","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,IAA7B,QAAyC,QAAzC;AACA,SAASC,KAAT,QAAsB,eAAtB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,SAA9C;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AACA,OAAOC,iBAAP,MAA8B,6CAA9B;;;AAGA,OAAOC,KAAP,MAAkB,+BAAlB;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC3B,QAAMC,SAAS,GAAGD,MAAM,GAAGN,aAAH,GAAmBD,cAA3C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACmB,aAAD,EAAgBC,gBAAhB,IAAoCpB,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACqB,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,aAAD,CAA9C;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,MAAD,CAA5C;AACA,QAAM,CAACyB,cAAD,EAAiBC,iBAAjB,IAAsC1B,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAM2B,mBAAmB,GAAIC,OAAD,IAAa;AACrC,QAAIA,OAAJ,EAAa;AACTR,MAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACH,KAFD,MAEO;AACHA,MAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACH;AACJ,GAND;;AAQA,QAAMS,QAAQ,GAAGnB,aAAa,CAAC;AAAEoB,IAAAA,cAAc,EAAE;AAAlB,GAAD,CAA9B;AACA,QAAMC,QAAQ,GAAGrB,aAAa,CAC1B;AAAEsB,IAAAA,cAAc,EAAE;AAAlB,GAD0B,EAE1BC,SAF0B,EAG1BN,mBAH0B,CAA9B;AASA,sBACI;AAAA,4BACI,QAAC,IAAD;AAEI,MAAA,EAAE,EAAER,aAFR;AAGI,MAAA,EAAE,EAAE,CAHR;AAII,MAAA,KAAK,EAAC,OAJV;AAKI,MAAA,UAAU,EAAC,YALf;AAAA,6BAQI;AACI,QAAA,KAAK,EAAE;AACHe,UAAAA,KAAK,EAAE;AADJ,SADX;AAAA,mBAOKH,QAAQ,iBACL;AACI,UAAA,KAAK,EAAE;AACHI,YAAAA,MAAM,EAAE;AADL,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARR,EAmBKN,QAAQ,iBACL;AACI,UAAA,KAAK,EAAE;AACHM,YAAAA,MAAM,EAAE;AADL,WADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBR;AAAA;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAuCI,QAAC,aAAD;AAAe,MAAA,MAAM,EAAElB,MAAvB;AAA+B,MAAA,SAAS,EAAED;AAA1C;AAAA;AAAA;AAAA;AAAA,YAvCJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2CH,CArED;;GAAMF,M;UAgBeJ,a,EACAA,a;;;KAjBfI,M;AAuENA,MAAM,CAACsB,SAAP,GAAmB;AACfrB,EAAAA,MAAM,EAAEb,SAAS,CAACmC,IAAV,CAAeC;AADR,CAAnB;AAIA,eAAexB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flex, Heading, Box, Link } from \"rebass\";\r\nimport { Input } from \"@rebass/forms\";\r\nimport { loggedOutLinks, loggedInLinks } from \"./links\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\nimport MenuContainer from \"../../components/Menu/MenuContainer\";\r\nimport DropMenuContainer from \"../../components/DropMenu/DropMenuContainer\"\r\nimport searchIcon from \"../../assets/icons/search-white-18dp.svg\";\r\nimport userIcon from \"../../assets/icons/person-white-24dp.svg\";\r\nimport theme from \"../../components/Layout/theme\";\r\n\r\nconst Header = ({ isUser }) => {\r\n    const menuLinks = isUser ? loggedInLinks : loggedOutLinks;\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [paddingHeader, setPaddingHeader] = useState(6);\r\n    const [navBarColor, setNavBarColor] = useState(\"transparent\");\r\n    const [dropShadow, setDropShadow] = useState(\"none\")\r\n    const [dropMenuStatus, setDropMenuStatus] = useState(false)\r\n\r\n    const handlePaddingHeader = (matches) => {\r\n        if (matches) {\r\n            setPaddingHeader(6);\r\n        } else {\r\n            setPaddingHeader(4);\r\n        }\r\n    };\r\n\r\n    const isMobile = useMediaQuery({ maxDeviceWidth: 768 });\r\n    const isLaptop = useMediaQuery(\r\n        { minDeviceWidth: 769 },\r\n        undefined,\r\n        handlePaddingHeader\r\n    );\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Flex\r\n\r\n                px={paddingHeader}\r\n                py={4}\r\n                color=\"white\"\r\n                alignItems=\"flex-start\"\r\n\r\n            >\r\n                <div\r\n                    style={{\r\n                        width: \"100%\",\r\n                    }}\r\n                >\r\n\r\n\r\n                    {isLaptop && (\r\n                        <div\r\n                            style={{\r\n                                border: '1px solid red',\r\n\r\n                            }}\r\n                        >\r\n                            laptop\r\n\r\n                        </div>\r\n                    )}\r\n\r\n                    {isMobile && (\r\n                        <div\r\n                            style={{\r\n                                border: '1px solid red',\r\n                            }}\r\n                        >\r\n                            mobile\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </Flex>\r\n            <MenuContainer isOpen={isOpen} menuLinks={menuLinks} />\r\n        </div>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    isUser: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}