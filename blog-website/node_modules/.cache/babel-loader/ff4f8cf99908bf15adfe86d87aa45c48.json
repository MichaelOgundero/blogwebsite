{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ogund\\\\Desktop\\\\workspace\\\\Javascript\\\\Blog\\\\blog-website\\\\src\\\\modules\\\\Header\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Flex, Heading, Box, Link, Text } from \"rebass\";\nimport { loggedOutLinks, loggedInLinks } from \"./links\";\n\nconst Header = ({\n  isUser\n}) => {\n  _s();\n\n  const links = isUser ? loggedInLinks : loggedOutLinks;\n  const [isOpen, setIsOpen] = useState(false);\n  const [paddingHeader, setPaddingHeader] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      px: 2,\n      color: \"white\",\n      bg: \"black\",\n      alignItems: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        p: 2,\n        fontWeight: \"bold\",\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mx: \"auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), links.right.map(link => /*#__PURE__*/_jsxDEV(Link, {\n        id: link.id,\n        children: link.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Header, \"JWYdrVS81BniPGV6YPPIVVV19HY=\");\n\n_c = Header;\nHeader.propTypes = {\n  isUser: PropTypes.bool.isRequired\n};\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["C:/Users/ogund/Desktop/workspace/Javascript/Blog/blog-website/src/modules/Header/index.js"],"names":["React","useState","Fragment","PropTypes","Flex","Heading","Box","Link","Text","loggedOutLinks","loggedInLinks","Header","isUser","links","isOpen","setIsOpen","paddingHeader","setPaddingHeader","right","map","link","id","propTypes","bool","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmCC,IAAnC,QAA+C,QAA/C;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,SAA9C;;AAEA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA;;AAC7B,QAAMC,KAAK,GAAGD,MAAM,GAAGF,aAAH,GAAmBD,cAAvC;AACA,QAAM,CAACK,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACe,aAAD,EAAgBC,gBAAhB,IAAoChB,QAAQ,EAAlD;AAEA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,EAAE,EAAE,CADN;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,EAAE,EAAC,OAHL;AAIE,MAAA,UAAU,EAAC,QAJb;AAAA,8BAME,QAAC,IAAD;AAAM,QAAA,CAAC,EAAE,CAAT;AAAY,QAAA,UAAU,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANF,eAOE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,cAPF,EASIY,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAiBC,IAAD,iBACd,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,IAAI,CAACC,EAAf;AAAA,kBACGD,IAAI,CAACC;AADR;AAAA;AAAA;AAAA;AAAA,cADF,CATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1BD;;GAAMV,M;;KAAAA,M;AA4BNA,MAAM,CAACW,SAAP,GAAmB;AACjBV,EAAAA,MAAM,EAAET,SAAS,CAACoB,IAAV,CAAeC;AADN,CAAnB;AAIA,eAAeb,MAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Flex, Heading, Box, Link, Text } from \"rebass\";\r\nimport { loggedOutLinks, loggedInLinks } from \"./links\";\r\n\r\nconst Header = ({ isUser }) => {\r\n  const links = isUser ? loggedInLinks : loggedOutLinks;\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [paddingHeader, setPaddingHeader] = useState();\r\n\r\n  return (\r\n    <div>\r\n      <Flex\r\n        px={2}\r\n        color=\"white\"\r\n        bg=\"black\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Text p={2} fontWeight=\"bold\">Home</Text>\r\n        <Box mx=\"auto\" />\r\n        {\r\n          links.right.map((link)=>(\r\n            <Link id={link.id}>\r\n              {link.id}\r\n            </Link>\r\n          ))\r\n        }\r\n\r\n      </Flex>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  isUser: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Header;\r\n"]},"metadata":{},"sourceType":"module"}